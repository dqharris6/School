Dalton Harris and Ashton Binkley
MP5 Report


An increase of worked threads from 15 to 164 makes the program run faster. Worker threads fluctuating between 190 and 375 results in some higher and some lower times. Regardless, 164 worker threads (same intervals used as last time) was the most efficient, and resulted in the fastest completion. The highest time comes when there are 15 worker threads, which is the default. The program worked most efficiently when the buffer size is bigger, as it runs most efficiently. We found the buffer size of 500 (on average) to be the fastest at each of the worker thread intervals below, but the absolute fastest time was 1.6 seconds, and came with the following specifications:

* Number of requests: 10,000
* Worker threads: 164
* Buffer size: 50

Our final results are as follows.

(Buffer size of 500)
* 15 worker threads: 7.3 seconds
* 100 worker threads: 3.6 seconds
* 150 worker threads: 2.2 seconds
* 164 worker threads: 1.7 seconds
* 190 worker threads: 2.9 seconds
* 200 worker threads: 2.5 seconds
* 300 worker threads: 2.3 seconds
* 350 worker threads: 2.4 seconds
* 375 worker threads: 2.7 seconds
* 390 worker threads: results in an overflow error
* 400 worker threads: results in an overflow error


